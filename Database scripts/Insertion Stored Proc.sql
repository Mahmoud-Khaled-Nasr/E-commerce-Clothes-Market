/*CREATE TYPE PRODUCTS_QUANTITY_LIST AS TABLE (PRODUCT INT PRIMARY KEY,QUANTITY INT NOT NULL);*/


GO

CREATE PROCEDURE INSEERT_EMPLOYEE 
	 @SSN NCHAR(14)
	,@NAME VARCHAR (100)
	,@GENDER NCHAR(1)
	,@BASE_SALARY DECIMAL
	,@EXTRA DECIMAL
	,@CLASSIFICATION NCHAR(10)
	,@PHONE NCHAR(10)
	,@ADDRESS VARCHAR(100)
	,@WORKING_HOURS FLOAT
	,@WORKINGAT INT
	,@SUPERID INT 
AS
BEGIN 
	IF NOT EXISTS 
	(	SELECT EmployeeID 
		FROM Employee
		WHERE SSN = @SSN	 )

		INSERT INTO Employee VALUES(@SSN
			,@NAME
			,@GENDER
			,@BASE_SALARY
			,@EXTRA
			,@CLASSIFICATION
			,@PHONE
			,@ADDRESS
			,@WORKING_HOURS
			,@WORKINGAT
			,@SUPERID );
	ELSE 	
		RETURN -1;
END
GO

CREATE PROCEDURE INSERT_BRANCH
		@LOCATION VARCHAR(100), @SALES DECIMAL,@PROFIT DECIMAL
AS
BEGIN
	IF NOT EXISTS (
		SELECT WorkingPlaceID 
		FROM WorkingPlace
		WHERE Location=@LOCATION)
		BEGIN
			INSERT INTO WorkingPlace VALUES(@LOCATION,'BRANCH');
			INSERT INTO ProductList VALUES( 'BRANCH'+@LOCATION );
			INSERT INTO Branch VALUES( 
				( SELECT WorkingPlaceID FROM WorkingPlace WHERE @LOCATION=[Location] ) 
				,@SALES
				,@PROFIT
				,(SELECT ProductListID FROM ProductList WHERE ProductListName= 'BRANCH'+@LOCATION) );
		END 
	ELSE
		RETURN -1;
END
GO

CREATE PROCEDURE INSERT_WAREHOUSE
		@LOCATION VARCHAR(100)
AS
BEGIN
	IF NOT EXISTS (
		SELECT WorkingPlaceID 
		FROM WorkingPlace 
		WHERE Location=@LOCATION )

		BEGIN
			INSERT INTO WorkingPlace VALUES(@LOCATION,'WAREHOUSE');
			INSERT INTO ProductList VALUES( 'WAREHOUSE'+@LOCATION );
			INSERT INTO Warehouse VALUES( 
				(	SELECT WorkingPlaceID 
					FROM WorkingPlace 
					WHERE @LOCATION=[Location] ) 
				,(	SELECT ProductListID 
					FROM ProductList 
					WHERE ProductListName= 'WAREHOUSE'+@LOCATION) );
		END
	ELSE
		RETURN -1;
END
GO

CREATE PROCEDURE INSERT_DELIVERY
		@LOCATION VARCHAR(100)
AS
BEGIN
	IF NOT EXISTS (
		SELECT WorkingPlaceID
		FROM WorkingPlace 
		WHERE Location=@LOCATION )

		BEGIN
			INSERT INTO WorkingPlace VALUES(@LOCATION,'DELIVERY');
			INSERT INTO DeliveryDepartment VALUES( 
				(	SELECT WorkingPlaceID 
					FROM WorkingPlace 
					WHERE @LOCATION=[Location])) ;
		END
	ELSE 
		RETURN -1;
END
GO

CREATE PROCEDURE INSERT_CUSTOMER
		@USERNAME VARCHAR(30) ,
	   	@PASSWORD VARCHAR(30) ,
		@SSN NCHAR(14) ,
		@NAME VARCHAR(50),
		@GENDER nchar(1) ,
		@AGE INT 
AS
BEGIN
	IF NOT EXISTS ( SELECT CustomerID 
					FROM Customer 
					WHERE UserName=@USERNAME OR SSN=@SSN )
		INSERT INTO Customer VALUES ( @USERNAME ,
			@PASSWORD ,
			@SSN ,
			@NAME ,
			@GENDER ,
			@AGE  )
	ELSE 
		RETURN -1;
END

GO
CREATE PROCEDURE CREATE_ORDER
		@CUSTOMER INT,
		@WAREHOUSEID INT,
		@DELIVERY INT
AS
DECLARE @TEMP_CUST VARCHAR(15),
		@TEMP_WARE VARCHAR(15),
		@TEMP_DEL VARCHAR(15),
		@TEMP VARCHAR(15),
		@IDENTETY VARCHAR(15),
		@PRODUCTS_LIST INT
BEGIN
	IF (	EXISTS (	SELECT CustomerID 
							FROM Customer 
							WHERE CustomerID=@CUSTOMER ) 
			AND EXISTS (	SELECT WarehouseID 
							FROM Warehouse 
							WHERE WarehouseID=@WAREHOUSEID)
			AND EXISTS (	SELECT DeliveryID
							FROM DeliveryDepartment 
							WHERE DeliveryID=@DELIVERY) )
		BEGIN
			SET @TEMP_CUST=CONVERT (VARCHAR(15),@CUSTOMER);
			SET @TEMP_WARE=CONVERT (VARCHAR(15),@WAREHOUSEID);
			SET @TEMP_DEL=CONVERT (VARCHAR(15),@DELIVERY);
			SET @PRODUCTS_LIST = (SELECT MAX ( ProductListID ) FROM ProductList);
			SET @IDENTETY=CONVERT (VARCHAR(15),@PRODUCTS_LIST );
			SET @TEMP=@IDENTETY+@TEMP_CUST+@TEMP_WARE+@TEMP_DEL;
			INSERT INTO ProductList VALUES(@TEMP);
			SET @PRODUCTS_LIST = (	SELECT ProductListID
									FROM ProductList
									WHERE @TEMP=ProductListName );
			INSERT INTO [Order] VALUES (@CUSTOMER,@PRODUCTS_LIST,@WAREHOUSEID,@DELIVERY);
			RETURN @PRODUCTS_LIST
		END
	ELSE
		RETURN -1
END


GO
CREATE PROCEDURE CREATE_SHIPMENT
		@SUPPLIER INT,
		@WAREHOUSEID INT
AS
DECLARE	@TEMP_WARE VARCHAR (50),
		@PRODUCT_LIST INT
BEGIN
	IF ( EXISTS ( 	SELECT SupplierID 
					FROM Supplier
					WHERE @SUPPLIER=SupplierID )
	  	AND EXISTS (	SELECT WarehouseID 
						FROM Warehouse
						WHERE WarehouseID=@WAREHOUSEID ) )
		BEGIN
			SET @TEMP_WARE =CONVERT (VARCHAR(50),@WAREHOUSEID)
			INSERT INTO ProductList VALUES (@SUPPLIER+@WAREHOUSEID);
			SET @PRODUCT_LIST=(	SELECT ProductListID 
								FROM ProductList
								WHERE ProductListName=@SUPPLIER+@WAREHOUSEID );
			INSERT INTO Shipment VALUES (	@PRODUCT_LIST,
											@SUPPLIER,
											@WAREHOUSEID );
			RETURN @PRODUCT_LIST
		END
	ELSE
		RETURN -1
END

GO
CREATE PROCEDURE POPULATE_PRODUCTLIST 
		@PRODUCTLIST_ID INT,
		@PRODUCT_BARCODE INT,
		@QUANTITY INT
AS
BEGIN
	IF (	EXISTS (	SELECT ProductListID
						FROM ProductList
						WHERE @PRODUCTLIST_ID=ProductListID	)
			AND EXISTS (	SELECT BarCode
							FROM Product
							WHERE @PRODUCT_BARCODE=BarCode )
			AND @QUANTITY > 0 )
		INSERT INTO Contain VALUES (@QUANTITY,@PRODUCTLIST_ID,@PRODUCT_BARCODE); 
	ELSE
		RETURN -1;

END

GO
CREATE PROCEDURE ADD_MANGER 
		@EMPLOYEE_ID INT,
		@WORKING_PLACE_ID INT
AS
BEGIN
	IF (	EXISTS (	SELECT EmployeeID
						FROM Employee
						WHERE @EMPLOYEE_ID=EmployeeID )
			AND NOT EXISTS (	SELECT MangerID
								FROM Manges
								WHERE @EMPLOYEE_ID=MangerID OR @WORKING_PLACE_ID=WorkingPlaceID )
			AND EXISTS (	SELECT WorkingPlaceID
							FROM WorkingPlace
							WHERE @WORKING_PLACE_ID=WorkingPlaceID ) )
		BEGIN 
			INSERT INTO Manges VALUES (	@EMPLOYEE_ID,@WORKING_PLACE_ID);
			UPDATE Employee
			SET Classification='MANGER',SupervisorID=NULL,WorkingAt=@WORKING_PLACE_ID
			WHERE @EMPLOYEE_ID=EmployeeID ;
		END
	ELSE
		RETURN -1
END

